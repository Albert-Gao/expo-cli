# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

# To get proper caching for monorepos we use actions/cache@eb78578266b7cec649ab65b6f1534bd6040c838b (from master branch)
# instead of actions/cache@1. Support for monorepos will be available in actions/cache@2.

name: Test Package
on: [pull_request]

jobs:
  dependencies:
    strategy:
      matrix:
        # Run tests with all of these node versions/systems :]
        node-version: [10.x]
        # os: [ubuntu-latest, windows-latest, macOS-latest]
        os: [ubuntu-latest]
    name: Setup Node ${{ matrix.node-version }} (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache node_modules
        id: cache_node_modules
        uses: actions/cache@master
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
      - if: steps.cache_node_modules.outputs.cache-hit != 'true'
        run: yarn
      - name: Cache build
        id: cache_build
        uses: actions/cache@master
        with:
          path: |
            build/
            */*/build/
            */*/*.tsbuildinfo
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
      - if: steps.cache_build.outputs.cache-hit != 'true'
        run: yarn lerna bootstrap
      # - name: Cache
      #   id: cache
      #   uses: actions/cache@master
      #   with:
      #     path: |
      #       *
      #     key: n-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      # - name: Install Dependencies
      #   if: steps.cache.outputs.cache-hit != 'true'
      #   run: yarn
      # Setup Learna - run manually so we don't run yarn more than needed
      - run: yarn lerna run prepare --stream

  test:
    strategy:
      matrix:
        package: [json-file]
        # Run tests with all of these node versions/systems :]
        node-version: [10.x]
        # os: [ubuntu-latest, windows-latest, macOS-latest]
        os: [ubuntu-latest]
    needs: dependencies
    name: ${{ matrix.package }} with Node ${{ matrix.node-version }} (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache node_modules
        id: cache_node_modules
        uses: actions/cache@master
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
      - name: Cache build
        id: cache_build
        uses: actions/cache@master
        with:
          path: |
            build/
            */*/build/
            */*/*.tsbuildinfo
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
      - name: Test ${{ matrix.package }}
        run: cd packages/${{ matrix.package }} && "$GITHUB_WORKSPACE/scripts/module-scripts-check-packages.sh"
        env:
          CI: true
