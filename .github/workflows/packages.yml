# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

# To get proper caching for monorepos we use actions/cache@eb78578266b7cec649ab65b6f1534bd6040c838b (from master branch)
# instead of actions/cache@1. Support for monorepos will be available in actions/cache@2.

name: Test Package
on: [pull_request]

jobs:
  dependencies:
    strategy:
      matrix:
        # Run tests with all of these node versions/systems :]
        node-version: [10.x]
        # os: [ubuntu-latest, windows-latest, macOS-latest]
        os: [ubuntu-latest]
    name: Setup Node ${{ matrix.node-version }} (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node-version }}
      # Rehydrate yarn
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Yarn cache
        uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Yarn install
          if: steps.yarn-cache.outputs.cache-hit != 'true'
         run: yarn install --frozen-lockfile

      # Setup Learna
      - name: Learna bootstrap
        run: yarn lerna bootstrap
      - name: Learna prepare
        run: yarn lerna run prepare --stream
      
      # Save state
      - name: Persist to Workspace
        uses: actions/upload-artifact@master
        with:
          name: dependencies-${{ matrix.os }}-${{ matrix.node-version }}
          path: '/'

  test:
    strategy:
      matrix:
        package: [json-file]
        # Run tests with all of these node versions/systems :]
        node-version: [10.x]
        # os: [ubuntu-latest, windows-latest, macOS-latest]
        os: [ubuntu-latest]
    needs: dependencies
    name: ${{ matrix.package }} with Node ${{ matrix.node-version }} (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    steps:
      # - uses: actions/checkout@v2
      #   with:
      #     fetch-depth: 1

      # - name: Use Node.js ${{ matrix.node-version }}
      #   uses: actions/setup-node@v1
      #   with:
      #     node-version: ${{ matrix.node-version }}

      - name: Attach Workspace
        uses: actions/download-artifact@master
        with:
          name: dependencies-${{ matrix.os }}-${{ matrix.node-version }}

      - name: Test ${{ matrix.package }}
        run: cd packages/${{ matrix.package }} && "$GITHUB_WORKSPACE/scripts/module-scripts-check-packages.sh"
        env:
          CI: true
